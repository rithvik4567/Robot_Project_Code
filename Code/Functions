The following sections outline the coding we completed for the project. We approached this task by creating functions for each of the basic 
movements the robot would execute. Stringed together, this would allow the robot to navigate the course effectively. Unfortunately, the project was cut 
short due to the 2020 COVID-19 outbreak, so we were unable to complete the final versions of our robot, including the code.

The code was c++ based, written using QTCreator, and was executed on a Proteus microcontroller, specially developed by The Ohio State University for use 
in this course.

The progress of our robot’s development was measured with the use of performance tests which tackled small sections of the full course. 
Likewise, our code is broken up into these sections. 

Functions:

1. move_forward();

Description: 
The function used for the robot to move forward.

Parameters:
int percent – The motor percent for the wheels on the robot.
int inches- The number of inches the robot moves

Returns:
None

Examples

#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <FEHRPS.h>
int main(void){
int motor_percent = 25;
int number_of_inches = 8
move_forward(motor_percent, number_of_inches);
}

Notes:
The previous version of this method used counts instead of inches as its parameter. This was used in performance test 1.

2. move_backward();

Description:
The function used for the robot to move backward.

Parameters:
int percent – The motor percent for the wheels on the robot.
int inches- The number of inches the robot moves

Returns:
None

Examples

#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <FEHRPS.h>
int main(void){
int motor_percent = 25;
int number_of_inches = 8
move_backward(motor_percent, number_of_inches);
}

Notes:
The previous version of this method used counts instead of inches as its parameter. This was used in performance test 1.

3. turn_right();

Description:
The function used for the robot to turn right.

Parameters:
int percent – The motor percent for the wheels on the robot.
int degrees- The number of degrees the robot turns to the right.

Returns:
None

Examples

#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <FEHRPS.h>
int main(void){
int motor_percent = 25;
int number_of_degrees = 30
turn_right(motor_percent, number_of_degrees);
}

4.turn_left();

Description:
The function used for the robot to turn left.

Parameters:
int percent – The motor percent for the wheels on the robot.
int degrees- The number of degrees the robot turns to the right.

Returns:
None

Examples

#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <FEHRPS.h>
int main(void){
int motor_percent = 25;
int number_of_degrees = 60
turn_left(motor_percent, number_of_degrees);
}

5.up_ramp();

Description:
The function used for the robot to go up the ramp. It takes into account that the robot is going on an incline instead of a smooth surface.

Parameters:
int percent – The motor percent for the wheels on the robot.
int inches- The number of inches the robot moves

Returns:
None

Examples

#include <FEHLCD.h>
#include <FEHIO.h>
#include <FEHUtility.h>
#include <FEHMotor.h>
#include <FEHRPS.h>
int main(void){
int motor_percent = 25;
int number_of_inches = 8
up_ramp(motor_percent, number_of_inches);
}

Notes:
The previous version of this method used counts instead of inches as its parameter.


